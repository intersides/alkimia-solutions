services:
  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - ./traefik/acme:/acme
      - ./traefik/traefik.prod.yml:/etc/traefik/traefik.yml:ro
    command:
      - "--configfile=/etc/traefik/traefik.yml"
      - "--log.level=${TRAEFIK_LOG_LEVEL:-INFO}"
    networks:
      - intersides-workspace-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: backend
        ENV: ${ENV}
    deploy:
      replicas: 1
    environment:
      - ENV=${ENV}
      - PROTOCOL=${PROTOCOL}
      - DOMAIN=${DOMAIN}
      - SUBDOMAIN=${BACKEND_SUBDOMAIN}
      - PORT=${BACKEND_PORT}
    networks:
      - intersides-workspace-network
    ports:
      - 8080:3000

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: frontend
        ENV: ${ENV}
    deploy:
      replicas: 1
    environment:
      - ENV=${ENV}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=${DOCKER_FILE_PORT}"
      - "traefik.http.services.frontend.loadbalancer.sticky=false"
    networks:
      - intersides-workspace-network
    ports:
      - 7070:3000

networks:
  intersides-workspace-network:
    name: intersides-workspace-network
    driver: bridge
